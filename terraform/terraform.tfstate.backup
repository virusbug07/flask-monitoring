{
  "version": 4,
  "terraform_version": "1.9.2",
  "serial": 32,
  "lineage": "a1bea332-7e5c-1b6b-b86c-121c95203387",
  "outputs": {},
  "resources": [
    {
      "mode": "managed",
      "type": "helm_release",
      "name": "grafana",
      "provider": "provider[\"registry.terraform.io/hashicorp/helm\"]",
      "instances": [
        {
          "schema_version": 1,
          "attributes": {
            "atomic": false,
            "chart": "grafana",
            "cleanup_on_fail": false,
            "create_namespace": false,
            "dependency_update": false,
            "description": null,
            "devel": null,
            "disable_crd_hooks": false,
            "disable_openapi_validation": false,
            "disable_webhooks": false,
            "force_update": false,
            "id": "grafana",
            "keyring": null,
            "lint": false,
            "manifest": null,
            "max_history": 0,
            "metadata": [
              {
                "app_version": "11.5.2",
                "chart": "grafana",
                "first_deployed": 1740497851,
                "last_deployed": 1740499661,
                "name": "grafana",
                "namespace": "observability",
                "notes": "1. Get your 'admin' user password by running:\n\n   kubectl get secret --namespace observability grafana -o jsonpath=\"{.data.admin-password}\" | base64 --decode ; echo\n\n\n2. The Grafana server can be accessed via port 80 on the following DNS name from within your cluster:\n\n   grafana.observability.svc.cluster.local\n\n   Get the Grafana URL to visit by running these commands in the same shell:\n     export POD_NAME=$(kubectl get pods --namespace observability -l \"app.kubernetes.io/name=grafana,app.kubernetes.io/instance=grafana\" -o jsonpath=\"{.items[0].metadata.name}\")\n     kubectl --namespace observability port-forward $POD_NAME 3000\n\n3. Login with the password from step 1 and the username: admin\n#################################################################################\n######   WARNING: Persistence is disabled!!! You will lose your data when   #####\n######            the Grafana pod is terminated.                            #####\n#################################################################################\n",
                "revision": 2,
                "values": "{\"adminPassword\":\"admin\",\"datasources\":{\"datasources.yaml\":{\"apiVersion\":1,\"datasources\":[{\"access\":\"proxy\",\"isDefault\":true,\"name\":\"Prometheus\",\"type\":\"prometheus\",\"url\":\"http://prometheus-operated.observability.svc:9090\"},{\"access\":\"proxy\",\"name\":\"Loki\",\"type\":\"loki\",\"url\":\"http://loki.observability.svc:3100\"},{\"access\":\"proxy\",\"name\":\"Tempo\",\"type\":\"tempo\",\"url\":\"http://tempo.observability.svc:3100\"}]}}}",
                "version": "8.10.1"
              }
            ],
            "name": "grafana",
            "namespace": "observability",
            "pass_credentials": false,
            "postrender": [],
            "recreate_pods": false,
            "render_subchart_notes": true,
            "replace": false,
            "repository": "https://grafana.github.io/helm-charts",
            "repository_ca_file": null,
            "repository_cert_file": null,
            "repository_key_file": null,
            "repository_password": null,
            "repository_username": null,
            "reset_values": false,
            "reuse_values": false,
            "set": [],
            "set_list": [],
            "set_sensitive": [],
            "skip_crds": false,
            "status": "deployed",
            "timeout": 300,
            "upgrade_install": null,
            "values": [
              "adminPassword: \"admin\"  # Change this for security\n\ndatasources:\n  datasources.yaml:\n    apiVersion: 1\n    datasources:\n      - name: Prometheus\n        type: prometheus\n        url: http://prometheus-operated.observability.svc:9090\n        access: proxy\n        isDefault: true\n\n      - name: Loki\n        type: loki\n        url: http://loki.observability.svc:3100\n        access: proxy\n\n      - name: Tempo\n        type: tempo\n        url: http://tempo.observability.svc:3100\n        access: proxy\n"
            ],
            "verify": false,
            "version": "8.10.1",
            "wait": true,
            "wait_for_jobs": false
          },
          "sensitive_attributes": [
            [
              {
                "type": "get_attr",
                "value": "repository_password"
              }
            ]
          ],
          "private": "eyJzY2hlbWFfdmVyc2lvbiI6IjEifQ==",
          "dependencies": [
            "kubernetes_namespace.observability"
          ]
        }
      ]
    },
    {
      "mode": "managed",
      "type": "helm_release",
      "name": "loki",
      "provider": "provider[\"registry.terraform.io/hashicorp/helm\"]",
      "instances": [
        {
          "schema_version": 1,
          "attributes": {
            "atomic": false,
            "chart": "loki-stack",
            "cleanup_on_fail": false,
            "create_namespace": false,
            "dependency_update": false,
            "description": null,
            "devel": null,
            "disable_crd_hooks": false,
            "disable_openapi_validation": false,
            "disable_webhooks": false,
            "force_update": false,
            "id": "loki",
            "keyring": null,
            "lint": false,
            "manifest": null,
            "max_history": 0,
            "metadata": [
              {
                "app_version": "v2.9.3",
                "chart": "loki-stack",
                "first_deployed": 1740499890,
                "last_deployed": 1740499890,
                "name": "loki",
                "namespace": "observability",
                "notes": "***********************************************************************\n Welcome to Grafana Promtail\n Chart version: 6.15.5\n Promtail version: 2.9.3\n***********************************************************************\n\nVerify the application is working by running these commands:\n* kubectl --namespace observability port-forward daemonset/loki-promtail 3101\n* curl http://127.0.0.1:3101/metrics\n\nVerify the application is working by running these commands:\n  kubectl --namespace observability port-forward service/loki 3100\n  curl http://127.0.0.1:3100/api/prom/label\n\nThe Loki stack has been deployed to your cluster. Loki can now be added as a datasource in Grafana.\n\nSee http://docs.grafana.org/features/datasources/loki/ for more detail.\n",
                "revision": 1,
                "values": "{\"grafana\":{\"enabled\":false},\"loki\":{\"image\":{\"repository\":\"grafana/loki\",\"tag\":\"2.9.3\"}}}",
                "version": "2.10.2"
              }
            ],
            "name": "loki",
            "namespace": "observability",
            "pass_credentials": false,
            "postrender": [],
            "recreate_pods": false,
            "render_subchart_notes": true,
            "replace": false,
            "repository": "https://grafana.github.io/helm-charts",
            "repository_ca_file": null,
            "repository_cert_file": null,
            "repository_key_file": null,
            "repository_password": null,
            "repository_username": null,
            "reset_values": false,
            "reuse_values": false,
            "set": [],
            "set_list": [],
            "set_sensitive": [],
            "skip_crds": false,
            "status": "deployed",
            "timeout": 300,
            "upgrade_install": null,
            "values": [
              "\"grafana\":\n  \"enabled\": false\n\"loki\":\n  \"image\":\n    \"repository\": \"grafana/loki\"\n    \"tag\": \"2.9.3\"\n"
            ],
            "verify": false,
            "version": "2.10.2",
            "wait": true,
            "wait_for_jobs": false
          },
          "sensitive_attributes": [
            [
              {
                "type": "get_attr",
                "value": "repository_password"
              }
            ]
          ],
          "private": "eyJzY2hlbWFfdmVyc2lvbiI6IjEifQ==",
          "dependencies": [
            "kubernetes_namespace.observability"
          ]
        }
      ]
    },
    {
      "mode": "managed",
      "type": "helm_release",
      "name": "prometheus",
      "provider": "provider[\"registry.terraform.io/hashicorp/helm\"]",
      "instances": [
        {
          "schema_version": 1,
          "attributes": {
            "atomic": false,
            "chart": "kube-prometheus-stack",
            "cleanup_on_fail": false,
            "create_namespace": false,
            "dependency_update": false,
            "description": null,
            "devel": null,
            "disable_crd_hooks": false,
            "disable_openapi_validation": false,
            "disable_webhooks": false,
            "force_update": false,
            "id": "prometheus",
            "keyring": null,
            "lint": false,
            "manifest": null,
            "max_history": 0,
            "metadata": [
              {
                "app_version": "v0.80.1",
                "chart": "kube-prometheus-stack",
                "first_deployed": 1740497852,
                "last_deployed": 1740499657,
                "name": "prometheus",
                "namespace": "observability",
                "notes": "1. Get the application URL by running these commands:\n  export POD_NAME=$(kubectl get pods --namespace observability -l \"app.kubernetes.io/name=prometheus-node-exporter,app.kubernetes.io/instance=prometheus\" -o jsonpath=\"{.items[0].metadata.name}\")\n  echo \"Visit http://127.0.0.1:9100 to use your application\"\n  kubectl port-forward --namespace observability $POD_NAME 9100\nkube-prometheus-stack has been installed. Check its status by running:\n  kubectl --namespace observability get pods -l \"release=prometheus\"\n\nGet Grafana 'admin' user password by running:\n\n  kubectl --namespace observability get secrets prometheus-grafana -o jsonpath=\"{.data.admin-password}\" | base64 -d ; echo\n\nAccess Grafana local instance:\n\n  export POD_NAME=$(kubectl --namespace observability get pod -l \"app.kubernetes.io/name=grafana,app.kubernetes.io/instance=prometheus\" -oname)\n  kubectl --namespace observability port-forward $POD_NAME 3000\n\nVisit https://github.com/prometheus-operator/kube-prometheus for instructions on how to create \u0026 configure Alertmanager and Prometheus instances using the Operator.\n\nkube-state-metrics is a simple service that listens to the Kubernetes API server and generates metrics about the state of the objects.\nThe exposed metrics can be found here:\nhttps://github.com/kubernetes/kube-state-metrics/blob/master/docs/README.md#exposed-metrics\n\nThe metrics are exported on the HTTP endpoint /metrics on the listening port.\nIn your case, prometheus-kube-state-metrics.observability.svc.cluster.local:8080/metrics\n\nThey are served either as plaintext or protobuf depending on the Accept header.\nThey are designed to be consumed either by Prometheus itself or by a scraper that is compatible with scraping a Prometheus client endpoint.\n",
                "revision": 2,
                "values": "{\"alertmanager\":{\"enabled\":false},\"grafana\":{\"enabled\":false}}",
                "version": "69.5.1"
              }
            ],
            "name": "prometheus",
            "namespace": "observability",
            "pass_credentials": false,
            "postrender": [],
            "recreate_pods": false,
            "render_subchart_notes": true,
            "replace": false,
            "repository": "https://prometheus-community.github.io/helm-charts",
            "repository_ca_file": null,
            "repository_cert_file": null,
            "repository_key_file": null,
            "repository_password": null,
            "repository_username": null,
            "reset_values": false,
            "reuse_values": false,
            "set": [],
            "set_list": [],
            "set_sensitive": [],
            "skip_crds": false,
            "status": "deployed",
            "timeout": 300,
            "upgrade_install": null,
            "values": [
              "grafana:\n  enabled: false\nalertmanager:\n  enabled: false  \n"
            ],
            "verify": false,
            "version": "69.5.1",
            "wait": true,
            "wait_for_jobs": false
          },
          "sensitive_attributes": [
            [
              {
                "type": "get_attr",
                "value": "repository_password"
              }
            ]
          ],
          "private": "eyJzY2hlbWFfdmVyc2lvbiI6IjEifQ==",
          "dependencies": [
            "kubernetes_namespace.observability"
          ]
        }
      ]
    },
    {
      "mode": "managed",
      "type": "helm_release",
      "name": "tempo",
      "provider": "provider[\"registry.terraform.io/hashicorp/helm\"]",
      "instances": [
        {
          "schema_version": 1,
          "attributes": {
            "atomic": false,
            "chart": "tempo",
            "cleanup_on_fail": false,
            "create_namespace": false,
            "dependency_update": false,
            "description": null,
            "devel": null,
            "disable_crd_hooks": false,
            "disable_openapi_validation": false,
            "disable_webhooks": false,
            "force_update": false,
            "id": "tempo",
            "keyring": null,
            "lint": false,
            "manifest": null,
            "max_history": 0,
            "metadata": [
              {
                "app_version": "2.7.1",
                "chart": "tempo",
                "first_deployed": 1740497836,
                "last_deployed": 1740497836,
                "name": "tempo",
                "namespace": "observability",
                "notes": "",
                "revision": 1,
                "values": "{\"tempo\":{\"storage\":{\"trace\":{\"backend\":\"local\"}}}}",
                "version": "1.18.2"
              }
            ],
            "name": "tempo",
            "namespace": "observability",
            "pass_credentials": false,
            "postrender": [],
            "recreate_pods": false,
            "render_subchart_notes": true,
            "replace": false,
            "repository": "https://grafana.github.io/helm-charts",
            "repository_ca_file": null,
            "repository_cert_file": null,
            "repository_key_file": null,
            "repository_password": null,
            "repository_username": null,
            "reset_values": false,
            "reuse_values": false,
            "set": [],
            "set_list": [],
            "set_sensitive": [],
            "skip_crds": false,
            "status": "deployed",
            "timeout": 300,
            "upgrade_install": null,
            "values": [
              "tempo:\n  storage:\n    trace:\n      backend: local\n"
            ],
            "verify": false,
            "version": "1.18.2",
            "wait": true,
            "wait_for_jobs": false
          },
          "sensitive_attributes": [
            [
              {
                "type": "get_attr",
                "value": "repository_password"
              }
            ]
          ],
          "private": "eyJzY2hlbWFfdmVyc2lvbiI6IjEifQ==",
          "dependencies": [
            "kubernetes_namespace.observability"
          ]
        }
      ]
    },
    {
      "mode": "managed",
      "type": "kubernetes_config_map",
      "name": "otel_collector_config",
      "provider": "provider[\"registry.terraform.io/hashicorp/kubernetes\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "binary_data": {},
            "data": {
              "otel-collector-config.yml": "receivers:\n  otlp:\n    protocols:\n      grpc:\n        endpoint: 0.0.0.0:4317\n      http:\n        endpoint: 0.0.0.0:4318\n\nprocessors:\n  batch: {}\n\nexporters:\n  otlp:\n    endpoint: \"tempo.observability.svc.cluster.local:4317\"\n    tls:\n      insecure: true\n\n  logging: {}\n\nservice:\n  pipelines:\n    traces:\n      receivers: [otlp]\n      processors: [batch]\n      exporters: [otlp, logging]\n"
            },
            "id": "observability/otel-collector-config",
            "immutable": false,
            "metadata": [
              {
                "annotations": {},
                "generate_name": "",
                "generation": 0,
                "labels": {},
                "name": "otel-collector-config",
                "namespace": "observability",
                "resource_version": "2067",
                "uid": "7d571e23-4e45-493e-81e8-b29d0db356e7"
              }
            ]
          },
          "sensitive_attributes": [],
          "private": "bnVsbA==",
          "dependencies": [
            "kubernetes_namespace.observability"
          ]
        }
      ]
    },
    {
      "mode": "managed",
      "type": "kubernetes_deployment",
      "name": "flask_app",
      "provider": "provider[\"registry.terraform.io/hashicorp/kubernetes\"]",
      "instances": [
        {
          "schema_version": 1,
          "attributes": {
            "id": "observability/flask-app",
            "metadata": [
              {
                "annotations": {},
                "generate_name": "",
                "generation": 1,
                "labels": {
                  "app": "flask-app"
                },
                "name": "flask-app",
                "namespace": "observability",
                "resource_version": "9812",
                "uid": "da69b4c1-750e-43f4-a625-b23672a25052"
              }
            ],
            "spec": [
              {
                "min_ready_seconds": 0,
                "paused": false,
                "progress_deadline_seconds": 600,
                "replicas": "1",
                "revision_history_limit": 10,
                "selector": [
                  {
                    "match_expressions": [],
                    "match_labels": {
                      "app": "flask-app"
                    }
                  }
                ],
                "strategy": [
                  {
                    "rolling_update": [
                      {
                        "max_surge": "25%",
                        "max_unavailable": "25%"
                      }
                    ],
                    "type": "RollingUpdate"
                  }
                ],
                "template": [
                  {
                    "metadata": [
                      {
                        "annotations": {},
                        "generate_name": "",
                        "generation": 0,
                        "labels": {
                          "app": "flask-app"
                        },
                        "name": "",
                        "namespace": "",
                        "resource_version": "",
                        "uid": ""
                      }
                    ],
                    "spec": [
                      {
                        "active_deadline_seconds": 0,
                        "affinity": [],
                        "automount_service_account_token": true,
                        "container": [
                          {
                            "args": [],
                            "command": [],
                            "env": [
                              {
                                "name": "OTEL_EXPORTER_OTLP_ENDPOINT",
                                "value": "http://otel-collector:4317",
                                "value_from": []
                              }
                            ],
                            "env_from": [],
                            "image": "my-flask-app:latest",
                            "image_pull_policy": "IfNotPresent",
                            "lifecycle": [],
                            "liveness_probe": [],
                            "name": "flask-app",
                            "port": [
                              {
                                "container_port": 5141,
                                "host_ip": "",
                                "host_port": 0,
                                "name": "",
                                "protocol": "TCP"
                              }
                            ],
                            "readiness_probe": [],
                            "resources": [
                              {
                                "limits": {},
                                "requests": {}
                              }
                            ],
                            "security_context": [],
                            "startup_probe": [],
                            "stdin": false,
                            "stdin_once": false,
                            "termination_message_path": "/dev/termination-log",
                            "termination_message_policy": "File",
                            "tty": false,
                            "volume_device": [],
                            "volume_mount": [],
                            "working_dir": ""
                          }
                        ],
                        "dns_config": [],
                        "dns_policy": "ClusterFirst",
                        "enable_service_links": true,
                        "host_aliases": [],
                        "host_ipc": false,
                        "host_network": false,
                        "host_pid": false,
                        "hostname": "",
                        "image_pull_secrets": [],
                        "init_container": [],
                        "node_name": "",
                        "node_selector": {},
                        "os": [],
                        "priority_class_name": "",
                        "readiness_gate": [],
                        "restart_policy": "Always",
                        "runtime_class_name": "",
                        "scheduler_name": "default-scheduler",
                        "security_context": [],
                        "service_account_name": "",
                        "share_process_namespace": false,
                        "subdomain": "",
                        "termination_grace_period_seconds": 30,
                        "toleration": [],
                        "topology_spread_constraint": [],
                        "volume": []
                      }
                    ]
                  }
                ]
              }
            ],
            "timeouts": null,
            "wait_for_rollout": true
          },
          "sensitive_attributes": [],
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjo2MDAwMDAwMDAwMDAsImRlbGV0ZSI6NjAwMDAwMDAwMDAwLCJ1cGRhdGUiOjYwMDAwMDAwMDAwMH0sInNjaGVtYV92ZXJzaW9uIjoiMSJ9",
          "dependencies": [
            "kubernetes_namespace.observability"
          ]
        }
      ]
    },
    {
      "mode": "managed",
      "type": "kubernetes_deployment",
      "name": "otel_collector",
      "provider": "provider[\"registry.terraform.io/hashicorp/kubernetes\"]",
      "instances": [
        {
          "schema_version": 1,
          "attributes": {
            "id": "observability/otel-collector",
            "metadata": [
              {
                "annotations": {},
                "generate_name": "",
                "generation": 1,
                "labels": {},
                "name": "otel-collector",
                "namespace": "observability",
                "resource_version": "9798",
                "uid": "3ce1f0f5-37d1-4bf7-9010-8e24b13f8652"
              }
            ],
            "spec": [
              {
                "min_ready_seconds": 0,
                "paused": false,
                "progress_deadline_seconds": 600,
                "replicas": "1",
                "revision_history_limit": 10,
                "selector": [
                  {
                    "match_expressions": [],
                    "match_labels": {
                      "app": "otel-collector"
                    }
                  }
                ],
                "strategy": [
                  {
                    "rolling_update": [
                      {
                        "max_surge": "25%",
                        "max_unavailable": "25%"
                      }
                    ],
                    "type": "RollingUpdate"
                  }
                ],
                "template": [
                  {
                    "metadata": [
                      {
                        "annotations": {},
                        "generate_name": "",
                        "generation": 0,
                        "labels": {
                          "app": "otel-collector"
                        },
                        "name": "",
                        "namespace": "",
                        "resource_version": "",
                        "uid": ""
                      }
                    ],
                    "spec": [
                      {
                        "active_deadline_seconds": 0,
                        "affinity": [],
                        "automount_service_account_token": true,
                        "container": [
                          {
                            "args": [],
                            "command": [
                              "/otelcol-contrib",
                              "--config=/etc/otel/otel-collector-config.yml"
                            ],
                            "env": [],
                            "env_from": [],
                            "image": "otel/opentelemetry-collector-contrib:0.81.0",
                            "image_pull_policy": "IfNotPresent",
                            "lifecycle": [],
                            "liveness_probe": [],
                            "name": "otel-collector",
                            "port": [],
                            "readiness_probe": [],
                            "resources": [
                              {
                                "limits": {},
                                "requests": {}
                              }
                            ],
                            "security_context": [],
                            "startup_probe": [],
                            "stdin": false,
                            "stdin_once": false,
                            "termination_message_path": "/dev/termination-log",
                            "termination_message_policy": "File",
                            "tty": false,
                            "volume_device": [],
                            "volume_mount": [
                              {
                                "mount_path": "/etc/otel",
                                "mount_propagation": "None",
                                "name": "otel-config",
                                "read_only": false,
                                "sub_path": ""
                              }
                            ],
                            "working_dir": ""
                          }
                        ],
                        "dns_config": [],
                        "dns_policy": "ClusterFirst",
                        "enable_service_links": true,
                        "host_aliases": [],
                        "host_ipc": false,
                        "host_network": false,
                        "host_pid": false,
                        "hostname": "",
                        "image_pull_secrets": [],
                        "init_container": [],
                        "node_name": "",
                        "node_selector": {},
                        "os": [],
                        "priority_class_name": "",
                        "readiness_gate": [],
                        "restart_policy": "Always",
                        "runtime_class_name": "",
                        "scheduler_name": "default-scheduler",
                        "security_context": [],
                        "service_account_name": "",
                        "share_process_namespace": false,
                        "subdomain": "",
                        "termination_grace_period_seconds": 30,
                        "toleration": [],
                        "topology_spread_constraint": [],
                        "volume": [
                          {
                            "aws_elastic_block_store": [],
                            "azure_disk": [],
                            "azure_file": [],
                            "ceph_fs": [],
                            "cinder": [],
                            "config_map": [
                              {
                                "default_mode": "0644",
                                "items": [],
                                "name": "otel-collector-config",
                                "optional": false
                              }
                            ],
                            "csi": [],
                            "downward_api": [],
                            "empty_dir": [],
                            "ephemeral": [],
                            "fc": [],
                            "flex_volume": [],
                            "flocker": [],
                            "gce_persistent_disk": [],
                            "git_repo": [],
                            "glusterfs": [],
                            "host_path": [],
                            "iscsi": [],
                            "local": [],
                            "name": "otel-config",
                            "nfs": [],
                            "persistent_volume_claim": [],
                            "photon_persistent_disk": [],
                            "projected": [],
                            "quobyte": [],
                            "rbd": [],
                            "secret": [],
                            "vsphere_volume": []
                          }
                        ]
                      }
                    ]
                  }
                ]
              }
            ],
            "timeouts": null,
            "wait_for_rollout": true
          },
          "sensitive_attributes": [],
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjo2MDAwMDAwMDAwMDAsImRlbGV0ZSI6NjAwMDAwMDAwMDAwLCJ1cGRhdGUiOjYwMDAwMDAwMDAwMH0sInNjaGVtYV92ZXJzaW9uIjoiMSJ9",
          "dependencies": [
            "kubernetes_config_map.otel_collector_config",
            "kubernetes_namespace.observability"
          ]
        }
      ]
    },
    {
      "mode": "managed",
      "type": "kubernetes_manifest",
      "name": "flask_service_monitor",
      "provider": "provider[\"registry.terraform.io/hashicorp/kubernetes\"]",
      "instances": [
        {
          "schema_version": 1,
          "attributes": {
            "computed_fields": null,
            "field_manager": [],
            "manifest": {
              "value": {
                "apiVersion": "monitoring.coreos.com/v1",
                "kind": "ServiceMonitor",
                "metadata": {
                  "labels": {
                    "release": "prometheus"
                  },
                  "name": "flask-app-monitor",
                  "namespace": "observability"
                },
                "spec": {
                  "endpoints": [
                    {
                      "interval": "30s",
                      "path": "/metrics",
                      "port": "http"
                    }
                  ],
                  "selector": {
                    "matchLabels": {
                      "app": "flask-app"
                    }
                  }
                }
              },
              "type": [
                "object",
                {
                  "apiVersion": "string",
                  "kind": "string",
                  "metadata": [
                    "object",
                    {
                      "labels": [
                        "object",
                        {
                          "release": "string"
                        }
                      ],
                      "name": "string",
                      "namespace": "string"
                    }
                  ],
                  "spec": [
                    "object",
                    {
                      "endpoints": [
                        "tuple",
                        [
                          [
                            "object",
                            {
                              "interval": "string",
                              "path": "string",
                              "port": "string"
                            }
                          ]
                        ]
                      ],
                      "selector": [
                        "object",
                        {
                          "matchLabels": [
                            "object",
                            {
                              "app": "string"
                            }
                          ]
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            "object": {
              "value": {
                "apiVersion": "monitoring.coreos.com/v1",
                "kind": "ServiceMonitor",
                "metadata": {
                  "annotations": null,
                  "creationTimestamp": null,
                  "deletionGracePeriodSeconds": null,
                  "deletionTimestamp": null,
                  "finalizers": null,
                  "generateName": null,
                  "generation": null,
                  "labels": {
                    "release": "prometheus"
                  },
                  "managedFields": null,
                  "name": "flask-app-monitor",
                  "namespace": "observability",
                  "ownerReferences": null,
                  "resourceVersion": null,
                  "selfLink": null,
                  "uid": null
                },
                "spec": {
                  "attachMetadata": {
                    "node": null
                  },
                  "bodySizeLimit": null,
                  "endpoints": [
                    {
                      "authorization": {
                        "credentials": {
                          "key": null,
                          "name": null,
                          "optional": null
                        },
                        "type": null
                      },
                      "basicAuth": {
                        "password": {
                          "key": null,
                          "name": null,
                          "optional": null
                        },
                        "username": {
                          "key": null,
                          "name": null,
                          "optional": null
                        }
                      },
                      "bearerTokenFile": null,
                      "bearerTokenSecret": {
                        "key": null,
                        "name": null,
                        "optional": null
                      },
                      "enableHttp2": null,
                      "filterRunning": null,
                      "followRedirects": null,
                      "honorLabels": null,
                      "honorTimestamps": null,
                      "interval": "30s",
                      "metricRelabelings": null,
                      "oauth2": {
                        "clientId": {
                          "configMap": {
                            "key": null,
                            "name": null,
                            "optional": null
                          },
                          "secret": {
                            "key": null,
                            "name": null,
                            "optional": null
                          }
                        },
                        "clientSecret": {
                          "key": null,
                          "name": null,
                          "optional": null
                        },
                        "endpointParams": null,
                        "noProxy": null,
                        "proxyConnectHeader": null,
                        "proxyFromEnvironment": null,
                        "proxyUrl": null,
                        "scopes": null,
                        "tlsConfig": {
                          "ca": {
                            "configMap": {
                              "key": null,
                              "name": null,
                              "optional": null
                            },
                            "secret": {
                              "key": null,
                              "name": null,
                              "optional": null
                            }
                          },
                          "cert": {
                            "configMap": {
                              "key": null,
                              "name": null,
                              "optional": null
                            },
                            "secret": {
                              "key": null,
                              "name": null,
                              "optional": null
                            }
                          },
                          "insecureSkipVerify": null,
                          "keySecret": {
                            "key": null,
                            "name": null,
                            "optional": null
                          },
                          "maxVersion": null,
                          "minVersion": null,
                          "serverName": null
                        },
                        "tokenUrl": null
                      },
                      "params": null,
                      "path": "/metrics",
                      "port": "http",
                      "proxyUrl": null,
                      "relabelings": null,
                      "scheme": null,
                      "scrapeTimeout": null,
                      "targetPort": null,
                      "tlsConfig": {
                        "ca": {
                          "configMap": {
                            "key": null,
                            "name": null,
                            "optional": null
                          },
                          "secret": {
                            "key": null,
                            "name": null,
                            "optional": null
                          }
                        },
                        "caFile": null,
                        "cert": {
                          "configMap": {
                            "key": null,
                            "name": null,
                            "optional": null
                          },
                          "secret": {
                            "key": null,
                            "name": null,
                            "optional": null
                          }
                        },
                        "certFile": null,
                        "insecureSkipVerify": null,
                        "keyFile": null,
                        "keySecret": {
                          "key": null,
                          "name": null,
                          "optional": null
                        },
                        "maxVersion": null,
                        "minVersion": null,
                        "serverName": null
                      },
                      "trackTimestampsStaleness": null
                    }
                  ],
                  "fallbackScrapeProtocol": null,
                  "jobLabel": null,
                  "keepDroppedTargets": null,
                  "labelLimit": null,
                  "labelNameLengthLimit": null,
                  "labelValueLengthLimit": null,
                  "namespaceSelector": {
                    "any": null,
                    "matchNames": null
                  },
                  "nativeHistogramBucketLimit": null,
                  "nativeHistogramMinBucketFactor": null,
                  "podTargetLabels": null,
                  "sampleLimit": null,
                  "scrapeClass": null,
                  "scrapeClassicHistograms": null,
                  "scrapeProtocols": null,
                  "selector": {
                    "matchExpressions": null,
                    "matchLabels": {
                      "app": "flask-app"
                    }
                  },
                  "selectorMechanism": null,
                  "targetLabels": null,
                  "targetLimit": null
                }
              },
              "type": [
                "object",
                {
                  "apiVersion": "string",
                  "kind": "string",
                  "metadata": [
                    "object",
                    {
                      "annotations": [
                        "map",
                        "string"
                      ],
                      "creationTimestamp": "string",
                      "deletionGracePeriodSeconds": "number",
                      "deletionTimestamp": "string",
                      "finalizers": [
                        "list",
                        "string"
                      ],
                      "generateName": "string",
                      "generation": "number",
                      "labels": [
                        "map",
                        "string"
                      ],
                      "managedFields": [
                        "tuple",
                        [
                          [
                            "object",
                            {
                              "apiVersion": "string",
                              "fieldsType": "string",
                              "fieldsV1": "dynamic",
                              "manager": "string",
                              "operation": "string",
                              "subresource": "string",
                              "time": "string"
                            }
                          ]
                        ]
                      ],
                      "name": "string",
                      "namespace": "string",
                      "ownerReferences": [
                        "list",
                        [
                          "object",
                          {
                            "apiVersion": "string",
                            "blockOwnerDeletion": "bool",
                            "controller": "bool",
                            "kind": "string",
                            "name": "string",
                            "uid": "string"
                          }
                        ]
                      ],
                      "resourceVersion": "string",
                      "selfLink": "string",
                      "uid": "string"
                    }
                  ],
                  "spec": [
                    "object",
                    {
                      "attachMetadata": [
                        "object",
                        {
                          "node": "bool"
                        }
                      ],
                      "bodySizeLimit": "string",
                      "endpoints": [
                        "list",
                        [
                          "object",
                          {
                            "authorization": [
                              "object",
                              {
                                "credentials": [
                                  "object",
                                  {
                                    "key": "string",
                                    "name": "string",
                                    "optional": "bool"
                                  }
                                ],
                                "type": "string"
                              }
                            ],
                            "basicAuth": [
                              "object",
                              {
                                "password": [
                                  "object",
                                  {
                                    "key": "string",
                                    "name": "string",
                                    "optional": "bool"
                                  }
                                ],
                                "username": [
                                  "object",
                                  {
                                    "key": "string",
                                    "name": "string",
                                    "optional": "bool"
                                  }
                                ]
                              }
                            ],
                            "bearerTokenFile": "string",
                            "bearerTokenSecret": [
                              "object",
                              {
                                "key": "string",
                                "name": "string",
                                "optional": "bool"
                              }
                            ],
                            "enableHttp2": "bool",
                            "filterRunning": "bool",
                            "followRedirects": "bool",
                            "honorLabels": "bool",
                            "honorTimestamps": "bool",
                            "interval": "string",
                            "metricRelabelings": [
                              "list",
                              [
                                "object",
                                {
                                  "action": "string",
                                  "modulus": "number",
                                  "regex": "string",
                                  "replacement": "string",
                                  "separator": "string",
                                  "sourceLabels": [
                                    "list",
                                    "string"
                                  ],
                                  "targetLabel": "string"
                                }
                              ]
                            ],
                            "oauth2": [
                              "object",
                              {
                                "clientId": [
                                  "object",
                                  {
                                    "configMap": [
                                      "object",
                                      {
                                        "key": "string",
                                        "name": "string",
                                        "optional": "bool"
                                      }
                                    ],
                                    "secret": [
                                      "object",
                                      {
                                        "key": "string",
                                        "name": "string",
                                        "optional": "bool"
                                      }
                                    ]
                                  }
                                ],
                                "clientSecret": [
                                  "object",
                                  {
                                    "key": "string",
                                    "name": "string",
                                    "optional": "bool"
                                  }
                                ],
                                "endpointParams": [
                                  "map",
                                  "string"
                                ],
                                "noProxy": "string",
                                "proxyConnectHeader": [
                                  "map",
                                  [
                                    "list",
                                    [
                                      "object",
                                      {
                                        "key": "string",
                                        "name": "string",
                                        "optional": "bool"
                                      }
                                    ]
                                  ]
                                ],
                                "proxyFromEnvironment": "bool",
                                "proxyUrl": "string",
                                "scopes": [
                                  "list",
                                  "string"
                                ],
                                "tlsConfig": [
                                  "object",
                                  {
                                    "ca": [
                                      "object",
                                      {
                                        "configMap": [
                                          "object",
                                          {
                                            "key": "string",
                                            "name": "string",
                                            "optional": "bool"
                                          }
                                        ],
                                        "secret": [
                                          "object",
                                          {
                                            "key": "string",
                                            "name": "string",
                                            "optional": "bool"
                                          }
                                        ]
                                      }
                                    ],
                                    "cert": [
                                      "object",
                                      {
                                        "configMap": [
                                          "object",
                                          {
                                            "key": "string",
                                            "name": "string",
                                            "optional": "bool"
                                          }
                                        ],
                                        "secret": [
                                          "object",
                                          {
                                            "key": "string",
                                            "name": "string",
                                            "optional": "bool"
                                          }
                                        ]
                                      }
                                    ],
                                    "insecureSkipVerify": "bool",
                                    "keySecret": [
                                      "object",
                                      {
                                        "key": "string",
                                        "name": "string",
                                        "optional": "bool"
                                      }
                                    ],
                                    "maxVersion": "string",
                                    "minVersion": "string",
                                    "serverName": "string"
                                  }
                                ],
                                "tokenUrl": "string"
                              }
                            ],
                            "params": [
                              "map",
                              [
                                "list",
                                "string"
                              ]
                            ],
                            "path": "string",
                            "port": "string",
                            "proxyUrl": "string",
                            "relabelings": [
                              "list",
                              [
                                "object",
                                {
                                  "action": "string",
                                  "modulus": "number",
                                  "regex": "string",
                                  "replacement": "string",
                                  "separator": "string",
                                  "sourceLabels": [
                                    "list",
                                    "string"
                                  ],
                                  "targetLabel": "string"
                                }
                              ]
                            ],
                            "scheme": "string",
                            "scrapeTimeout": "string",
                            "targetPort": "string",
                            "tlsConfig": [
                              "object",
                              {
                                "ca": [
                                  "object",
                                  {
                                    "configMap": [
                                      "object",
                                      {
                                        "key": "string",
                                        "name": "string",
                                        "optional": "bool"
                                      }
                                    ],
                                    "secret": [
                                      "object",
                                      {
                                        "key": "string",
                                        "name": "string",
                                        "optional": "bool"
                                      }
                                    ]
                                  }
                                ],
                                "caFile": "string",
                                "cert": [
                                  "object",
                                  {
                                    "configMap": [
                                      "object",
                                      {
                                        "key": "string",
                                        "name": "string",
                                        "optional": "bool"
                                      }
                                    ],
                                    "secret": [
                                      "object",
                                      {
                                        "key": "string",
                                        "name": "string",
                                        "optional": "bool"
                                      }
                                    ]
                                  }
                                ],
                                "certFile": "string",
                                "insecureSkipVerify": "bool",
                                "keyFile": "string",
                                "keySecret": [
                                  "object",
                                  {
                                    "key": "string",
                                    "name": "string",
                                    "optional": "bool"
                                  }
                                ],
                                "maxVersion": "string",
                                "minVersion": "string",
                                "serverName": "string"
                              }
                            ],
                            "trackTimestampsStaleness": "bool"
                          }
                        ]
                      ],
                      "fallbackScrapeProtocol": "string",
                      "jobLabel": "string",
                      "keepDroppedTargets": "number",
                      "labelLimit": "number",
                      "labelNameLengthLimit": "number",
                      "labelValueLengthLimit": "number",
                      "namespaceSelector": [
                        "object",
                        {
                          "any": "bool",
                          "matchNames": [
                            "list",
                            "string"
                          ]
                        }
                      ],
                      "nativeHistogramBucketLimit": "number",
                      "nativeHistogramMinBucketFactor": "string",
                      "podTargetLabels": [
                        "list",
                        "string"
                      ],
                      "sampleLimit": "number",
                      "scrapeClass": "string",
                      "scrapeClassicHistograms": "bool",
                      "scrapeProtocols": [
                        "list",
                        "string"
                      ],
                      "selector": [
                        "object",
                        {
                          "matchExpressions": [
                            "list",
                            [
                              "object",
                              {
                                "key": "string",
                                "operator": "string",
                                "values": [
                                  "list",
                                  "string"
                                ]
                              }
                            ]
                          ],
                          "matchLabels": [
                            "map",
                            "string"
                          ]
                        }
                      ],
                      "selectorMechanism": "string",
                      "targetLabels": [
                        "list",
                        "string"
                      ],
                      "targetLimit": "number"
                    }
                  ]
                }
              ]
            },
            "timeouts": [],
            "wait": [],
            "wait_for": null
          },
          "sensitive_attributes": [],
          "dependencies": [
            "kubernetes_namespace.observability"
          ]
        }
      ]
    },
    {
      "mode": "managed",
      "type": "kubernetes_namespace",
      "name": "observability",
      "provider": "provider[\"registry.terraform.io/hashicorp/kubernetes\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "id": "observability",
            "metadata": [
              {
                "annotations": {},
                "generate_name": "",
                "generation": 0,
                "labels": {},
                "name": "observability",
                "resource_version": "2064",
                "uid": "e2ad6e4f-eee5-4f3c-a4b8-714516106d8f"
              }
            ],
            "timeouts": null,
            "wait_for_default_service_account": false
          },
          "sensitive_attributes": [],
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiZGVsZXRlIjozMDAwMDAwMDAwMDB9fQ=="
        }
      ]
    },
    {
      "mode": "managed",
      "type": "kubernetes_service",
      "name": "flask_service",
      "provider": "provider[\"registry.terraform.io/hashicorp/kubernetes\"]",
      "instances": [
        {
          "schema_version": 1,
          "attributes": {
            "id": "observability/flask-service",
            "metadata": [
              {
                "annotations": {},
                "generate_name": "",
                "generation": 0,
                "labels": {},
                "name": "flask-service",
                "namespace": "observability",
                "resource_version": "10620",
                "uid": "8dc491e4-50e7-490e-bac0-c5c219f5a452"
              }
            ],
            "spec": [
              {
                "allocate_load_balancer_node_ports": true,
                "cluster_ip": "10.108.231.174",
                "cluster_ips": [
                  "10.108.231.174"
                ],
                "external_ips": [],
                "external_name": "",
                "external_traffic_policy": "",
                "health_check_node_port": 0,
                "internal_traffic_policy": "Cluster",
                "ip_families": [
                  "IPv4"
                ],
                "ip_family_policy": "SingleStack",
                "load_balancer_class": "",
                "load_balancer_ip": "",
                "load_balancer_source_ranges": [],
                "port": [
                  {
                    "app_protocol": "",
                    "name": "http",
                    "node_port": 0,
                    "port": 5141,
                    "protocol": "TCP",
                    "target_port": "5141"
                  }
                ],
                "publish_not_ready_addresses": false,
                "selector": {
                  "app": "flask-app"
                },
                "session_affinity": "None",
                "session_affinity_config": [],
                "type": "ClusterIP"
              }
            ],
            "status": [
              {
                "load_balancer": [
                  {
                    "ingress": []
                  }
                ]
              }
            ],
            "timeouts": null,
            "wait_for_load_balancer": true
          },
          "sensitive_attributes": [],
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjo2MDAwMDAwMDAwMDB9LCJzY2hlbWFfdmVyc2lvbiI6IjEifQ==",
          "dependencies": [
            "kubernetes_namespace.observability"
          ]
        }
      ]
    },
    {
      "mode": "managed",
      "type": "kubernetes_service",
      "name": "otel_collector",
      "provider": "provider[\"registry.terraform.io/hashicorp/kubernetes\"]",
      "instances": [
        {
          "schema_version": 1,
          "attributes": {
            "id": "observability/otel-collector",
            "metadata": [
              {
                "annotations": {},
                "generate_name": "",
                "generation": 0,
                "labels": {},
                "name": "otel-collector",
                "namespace": "observability",
                "resource_version": "5068",
                "uid": "2e82ae24-fa5a-4239-809a-50b16920dd58"
              }
            ],
            "spec": [
              {
                "allocate_load_balancer_node_ports": true,
                "cluster_ip": "10.102.32.177",
                "cluster_ips": [
                  "10.102.32.177"
                ],
                "external_ips": [],
                "external_name": "",
                "external_traffic_policy": "",
                "health_check_node_port": 0,
                "internal_traffic_policy": "Cluster",
                "ip_families": [
                  "IPv4"
                ],
                "ip_family_policy": "SingleStack",
                "load_balancer_class": "",
                "load_balancer_ip": "",
                "load_balancer_source_ranges": [],
                "port": [
                  {
                    "app_protocol": "",
                    "name": "",
                    "node_port": 0,
                    "port": 4317,
                    "protocol": "TCP",
                    "target_port": "4317"
                  }
                ],
                "publish_not_ready_addresses": false,
                "selector": {
                  "app": "otel-collector"
                },
                "session_affinity": "None",
                "session_affinity_config": [],
                "type": "ClusterIP"
              }
            ],
            "status": [
              {
                "load_balancer": [
                  {
                    "ingress": []
                  }
                ]
              }
            ],
            "timeouts": null,
            "wait_for_load_balancer": true
          },
          "sensitive_attributes": [],
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjo2MDAwMDAwMDAwMDB9LCJzY2hlbWFfdmVyc2lvbiI6IjEifQ==",
          "dependencies": [
            "kubernetes_namespace.observability"
          ]
        }
      ]
    }
  ],
  "check_results": null
}
